参考网址：https://github.com/apple/swift/blob/master/docs/OptimizationTips.rst

启动优化：
通常第一件事情就是启动优化。Swift提供了三种不同的优化级别：

☀ -Onone: 这个意味着正常的开发。这个级别执行最小的优化和保存所有的debug信息。
☀︎ -O:这个意味着对于大多数生产代码。编译器积极的进行优化，大大改善提交代码的类型和数量。debug信息会被提交但是会有所省略。   
☀ -Ounchecked: 这是一个特殊的优化模式，对于一些特定的库或者是应用是用安全性来换取性能。编译器会移除所有的溢出检测和一些隐式的类型检查。
这不是在通常情况下使用的，因为它可能会导致内存安全问题和整数溢出。如果你想这样做的话，必须仔细审查你的代码对整数溢出和类型转换来说是安全的。

整体组件优化：
默认情况下，Swift单独编译每个文件。这能让Xcode非常快速的并行编译多个文件。然而，每个文件单独编译的话会阻止某些编译器的优化。
Swift在即使它是一个单独的文件或是一个单独的单元也能够对这个程序进行编译。
这个模式可以是用命令行flag -whole-module-optimization来开启。在这种模式下被编译的程序最有可能需要更长的时间来编译，但是运行起来会更快。

这个模式能够通过Xcode中的build setting ‘Whole Module Optimization’来启用。

